@model  Emblishment_Management_System.Models.emsInspectionT

<div class="">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">Inspection Item Detail</h4>
    </div>
    <div class="modal-body">
        <div class="row">
            <div class="col-xs-8">
                <div class="box">
                    @using (Html.BeginForm(null, null, FormMethod.Post))
                    {
                    <!-- /.box-header -->
                        <div class="box-body">
                            <div class="col-xs-4">
                                <div class="form-group">
                                    <label>Sales Order</label>
                                    @Html.EditorFor(model => model.SO, new { htmlAttributes = new { @class = "form-control", placeholder = "SO", disabled = "disabled", @readonly = "readonly" } })
                                    @Html.HiddenFor(model => model.SO)
                                </div>

                                <div class="form-group">
                                    <label>Size</label>
                                    @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control", placeholder = "Size", disabled = "disabled", @readonly = "readonly", @Id = "Size" } })
                                    @Html.HiddenFor(model => model.Size)

                                    @Html.HiddenFor(model => model.Docket, new { htmlAttributes = new { @class = "form-control", @Id = "Docket" } })
                                    @Html.HiddenFor(model => model.BatchId, new { htmlAttributes = new { @class = "form-control", @Id = "BatchId" } })
                                </div>

                                <div class="form-group">
                                    <label>Inspection Damage Qty</label>
                                    @Html.EditorFor(model => model.DamageQty, new { htmlAttributes = new { @class = "form-control", placeholder = "Damage Qty", disabled = "disabled", @readonly = "readonly", @Id = "InspectDamageQty" } })
                                    @Html.HiddenFor(model => model.DamageQty)
                                </div>

                                <div class="form-group">
                                    <label>Damage Reverse Qty</label>
                                    @Html.EditorFor(model => model.DamageReverseQty, new { htmlAttributes = new { @class = "form-control", placeholder = "Damage Reverse Qty", @Id = "DamageReverseQty" } })
                                    @Html.HiddenFor(model => model.DamageReverseQty)
                                </div>
                            </div>

                            <div class="col-xs-4">
                                <div class="form-group">
                                    <label>SG Style</label>
                                    @Html.EditorFor(model => model.SGStyle, new { htmlAttributes = new { @class = "form-control", placeholder = "SG Style", @Id = "SGStyle", disabled = "disabled", @readonly = "readonly" } })
                                    @Html.HiddenFor(model => model.SGStyle)
                                    @Html.HiddenFor(model => model.GRNNo, new { htmlAttributes = new { @class = "form-control", @Id = "GRNNo" } })
                                </div>

                                <div class="form-group">
                                    <label>Inspection Passed Qty</label>
                                    @Html.EditorFor(model => model.PassedQty, new { htmlAttributes = new { @class = "form-control", placeholder = "Passed Qty", disabled = "disabled", @readonly = "readonly", @Id = "PassedQty" } })
                                    @Html.HiddenFor(model => model.PassedQty)
                                </div>

                                <div class="form-group">
                                    <label>Reason Category</label>
                                    @Html.DropDownListFor(model => model.ReasonCategoryCode, (IEnumerable<SelectListItem>)(ViewBag.VDamageReasonCategory), "Select Damage Reason Category", new { @class = "form-control select2", @style = "width: 100%;", required = "required", @onchange = "FillDamageReason();" })
                                    @*@Html.DropDownListFor(model => model.ReasonCategoryCode, new SelectList(ViewBag.VDamageReasonCategory as System.Collections.IEnumerable, "CategoryCode", "Description"), "Select a Damage Category", new { id = "categoryList" })*@
                                </div>

                                <div class="form-group">
                                    <label>&nbsp;</label><br>
                                    <button type="submit" class="btn btn-success" onclick="AddPassedItem(this, event);">Passed Item</button>
                                    <button type="submit" class="btn btn-warning" onclick="AddDamageItem(this, event);">Damage Item</button>
                                </div>


                            </div>

                            <div class="col-xs-4">
                                <div class="form-group">
                                    <label>SG Component</label>
                                    @Html.EditorFor(model => model.SGComponent, new { htmlAttributes = new { @class = "form-control", placeholder = "SG Component", disabled = "disabled", @readonly = "readonly", @Id = "SGComponent" } })
                                    @Html.HiddenFor(model => model.SGComponent)
                                </div>

                                <div class="form-group">
                                    <label>Passed Reverse Qty</label>
                                    @Html.EditorFor(model => model.PassedReverseQty, new { htmlAttributes = new { @class = "form-control", placeholder = "PassedReverseQty", @Id = "PassedReverseQty" } })
                                    @Html.HiddenFor(model => model.PassedReverseQty)
                                </div>

                                <div class="form-group">
                                    <label>Reason</label>
                                    @Html.DropDownListFor(model => model.ReasonCode, new SelectList(Enumerable.Empty<SelectListItem>(), "ReasonCode", "ReasonCode"), "Select Reason", new { @class = "form-control select2", @style = "width: 100%;", required = "required" })
                                    @*@Html.DropDownListFor(model => model.ReasonCode, new SelectList(Enumerable.Empty<SelectListItem>(), "ReasonCode", "Description"), "Select a Reason", new { id = "reasonList" })*@
                                </div>


                                <div class="form-group pull-right">
                                    <label>&nbsp;</label><br>
                                    <button type="submit" class="btn btn-primary" onclick="ReverseInspectItems(this, event);">Save changes</button>
                                </div>

                            </div>
                        </div>
                    }
                    <!-- /.box -->
                </div>
            </div>
        </div>

        <div class="box box-default">
            <div class="box-header with-border">
                <h3 class="box-title">Damage/Pass Item Details</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                </div>
            </div>

            <div class="box-body">
                <div class="row">
                    <div class="col-md-12">
                        <div id="divPartialDamageItemView">
                            @{
                                List<Emblishment_Management_System.Models.emsDamageItem> lstDamageItem;


                                if (TempData["lstDamageItemDetails"] == null)
                                {
                                    lstDamageItem = new List<Emblishment_Management_System.Models.emsDamageItem>();
                                }
                                else
                                {
                                    lstDamageItem = TempData["lstDamageItemDetails"] as List<Emblishment_Management_System.Models.emsDamageItem>;
                                    TempData["lstDamageItemDetails"] = lstDamageItem;
                                }


                                Html.RenderPartial("_PartialDamageItem", lstDamageItem.Where(e => e.SO == Model.SO && e.SGStyle == Model.SGStyle && e.SGComponent == Model.SGComponent && e.Docket == Model.Docket && e.Size == Model.Size));
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>



    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-default modal-close-btn" data-dismiss="modal">Close</button>
    </div>
</div>



<script type="text/javascript">
    function ReverseInspectItems(ctrl, event) {
        event.preventDefault();

        //var DamageQty = parseInt($("#DamageQty").val());
        //var PassedQty = parseInt($("#PassedQty").val());
        //var DamageReverseQty = parseInt($("#DamageReverseQty").val());
        //var PassedReverseQty = parseInt($("#PassedReverseQty").val());
        //var GrnQty = parseInt($("#GrnQty").val());
         var SearchData = $('#searchval').val();
         

        $.ajax({
            url: '@Url.Action("UpdatePartialInspectionReverseDetails", "Inspection")',
            dataSrc: "Data",
            type: "POST",
            data: $("form").serialize(),
            success: function (result) {
                $("#divPartialInspectView").html(result);
              

                //Initialize Data Tables
                var table = $('#tblInspectionRevDetails').DataTable({
                    "columnDefs": [{
                        "defaultContent": "-",
                        "targets": "_all"
                    }]
                });

                table.search(SearchData).draw();

                $('#modal-container').modal('hide');

            }
        });

    }
</script>

<script type="text/javascript">
    function FillDamageReason() {
        var CatVal = $('#ReasonCategoryCode').val();
        $.ajax({
            url: '@Url.Action("FillDamageReason", "Inspection")',
            type: "GET",
            dataType: "JSON",
            data: { ReasonCategoryCode: CatVal },
            success: function (result) {
                $("#ReasonCode").html(""); // clear before appending new list
                $("#ReasonCode").append($('<option></option>').val(null).html("Select Reason"));
                $.each(result, function (i, item) {
                    $("#ReasonCode").append(
                        $('<option></option>').val(item.ReasonCode).html(item.Description));
                });
            }
        });

    }
</script>

<script type="text/javascript">
    function AddDamageItem(ctrl, event) {
        event.preventDefault();

        var GRNNo = $("#GRNNo").val();
        var SO = $("#SO").val();
        var SGStyle = $("#SGStyle").val();
        var SGComponent = $("#SGComponent").val();
        var Size = $("#Size").val();
        var Docket = $("#Docket").val();
        var ReasonCategoryCode = $("#ReasonCategoryCode").val();
        var ReasonCode = $("#ReasonCode").val();
        
        var DamageQty = parseInt($("#DamageQty").val());
        var DamageReverseQty = parseInt($("#DamageReverseQty").val());

        


        if (ReasonCategoryCode == "") {
            bootbox.alert('Please select damage category.');
            $("#ReasonCategoryCode").focus();
        }
        else if (ReasonCode == "") {
            bootbox.alert('Please select a valid damage reason.');
            $("#ReasonCode").focus();
        }
        else if (DamageReverseQty <= 0) {
            bootbox.alert('You entered damage qty is invalid.');
            $("#DamageReverseQty").focus();
        }
        else if (DamageReverseQty > DamageQty) {
            bootbox.alert('You cannot exceed inspection damage qty.');
            $("#DamageReverseQty").focus();
        }
        else {
            $.ajax({
                url: '@Url.Action("InspectionReverseDamageItem", "Inspection")',
                type: "POST",
                data: {
                    GRNNo: GRNNo, SO: SO, SGStyle: SGStyle, SGComponent: SGComponent, Size: Size, Docket: Docket,
                    ReasonCategoryCode: ReasonCategoryCode, ReasonCode: ReasonCode, DamageQty: DamageReverseQty,
                    AvalableToDamageReturn: DamageQty
                },
                success: function (result) {
                    $("#divPartialDamageItemView").html(result);
                }
            });
        }
    }
</script>


<script type="text/javascript">
    function AddPassedItem(ctrl, event) {
        event.preventDefault();

        var SO = $("#SO").val();
        var SGStyle = $("#SGStyle").val();
        var SGComponent = $("#SGComponent").val();
        var Size = $("#Size").val();
        var Docket = $("#Docket").val();

        var PassedQty = parseInt($("#PassedQty").val());
        var PassedReverseQty = parseInt($("#PassedReverseQty").val());

        if (PassedReverseQty <= 0) {
            bootbox.alert('You entered passed qty is invalid.');
            $("#PassedQty").focus();
        }
        else if (PassedQty < PassedReverseQty) {
            bootbox.alert('You cannot exceed inspection passed qty.');
            $("#DamageReverseQty").focus();
        }
        else {
            $.ajax({
                url: '@Url.Action("InspectionReversePassedItem", "Inspection")',
                type: "POST",
                data: { SO: SO, SGStyle: SGStyle, SGComponent: SGComponent, Size: Size, Docket: Docket, PassedQty: PassedQty },
                success: function (result) {
                    $("#divPartialDamageItemView").html(result);
                }
            });
        }
    }
</script>